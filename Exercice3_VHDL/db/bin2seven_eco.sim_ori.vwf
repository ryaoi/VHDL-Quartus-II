/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("bin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("bin[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("leds_on")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("c")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("e")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("f")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("g")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("bin[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bin[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 200.0;
	}
}

TRANSITION_LIST("bin[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 200.0;
	}
}

TRANSITION_LIST("bin[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
	}
}

TRANSITION_LIST("leds_on")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 740.0;
	}
}

TRANSITION_LIST("a")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61.46;
		LEVEL 1 FOR 49.521;
		LEVEL 0 FOR 59.165;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 240.835;
		LEVEL 1 FOR 0.479;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 149.521;
		LEVEL 0 FOR 99.915;
		LEVEL 1 FOR 0.564;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 49.521;
		LEVEL 0 FOR 89.019;
	}
}

TRANSITION_LIST("b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.125;
		LEVEL 1 FOR 140.484;
		LEVEL 0 FOR 0.483;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 149.517;
		LEVEL 1 FOR 0.483;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 49.517;
		LEVEL 0 FOR 0.483;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 49.517;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 189.391;
	}
}

TRANSITION_LIST("c")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.713;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 9.059;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 340.941;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 49.553;
		LEVEL 1 FOR 100.095;
		LEVEL 0 FOR 100.352;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 39.287;
	}
}

TRANSITION_LIST("d")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 62.638;
		LEVEL 1 FOR 49.511;
		LEVEL 0 FOR 59.11;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.89;
		LEVEL 1 FOR 0.489;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 49.423;
		LEVEL 0 FOR 100.577;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 149.511;
		LEVEL 1 FOR 0.489;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 49.511;
		LEVEL 0 FOR 87.851;
	}
}

TRANSITION_LIST("e")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61.084;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 49.518;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 0.482;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 38.916;
	}
}

TRANSITION_LIST("f")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61.147;
		LEVEL 1 FOR 208.624;
		LEVEL 0 FOR 40.885;
		LEVEL 1 FOR 0.491;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 49.422;
		LEVEL 0 FOR 200.087;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 99.913;
		LEVEL 1 FOR 0.578;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 138.853;
	}
}

TRANSITION_LIST("g")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 112.378;
		LEVEL 0 FOR 59.111;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.889;
		LEVEL 1 FOR 0.483;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 48.57;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.947;
		LEVEL 0 FOR 87.622;
	}
}

DISPLAY_LINE
{
	CHANNEL = "bin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "bin[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bin[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bin[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bin[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "leds_on";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "c";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "d";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "e";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "f";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "g";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 16425;
	MASTER = TRUE;
}
;
